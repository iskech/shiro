
server:
    port: 1110

spring:
    # application:
    #     name: test-demo
    jackson:
        date-format: yyyy/MM/dd HH/mm/ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    ##数据库配置 链接四要素等基本配置
    datasource:
        name: mysql
        url: jdbc:mysql://localhost:3306/ag_admin_v1?useUnicode=true&characterEncoding=UTF8
        username: root
        password: winserver

        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        ##以下配置后续补充
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    cloud:
      stream:
              #默认使用的中间件 rabbit/kafka
        defaultBinder: rabbit
              #绑定所需使用的通道
        bindings:
              #出现错误的队列名
          error:
            destination: erabbitqueen
                  #自定义的接口中的output通道名称
          demo_output:
              #对应于MQ就是 exchange
            destination: demo_queen
              #队列消息解析的格式
            content-type: application/json
          demo_input:
            destination: demo_queen
            content-type: appliction/json
            group: xxxoo  #分组可以防止多服务同时消费该队列的消息 若分组则多服务轮询消费同一组下的同队列消息
              #binder: defaultRabbit
    #        output:
    #          destination: rabbitqueen #对应于MQ就是 exchange
    #          content-type: application/json
    #          #binder: defaultRabbit
            #自定义的接口中的output通道名称

    #        input:
    #          destination: rabbitqueen
    #          content-type: appliction/json
    #          group: xxxooo  #分组可以防止多服务同时消费该队列的消息 若分组则多服务轮询消费同一组下的同队列消息
            #自定义的接口中的input通道名称

          rabbit:
            binder:
              zkNodes: localhost
              brokers: localhost

        rabbitmq:
          host: localhost
          port: 5672
          username: guest
          password: guest

            
            
##mybatis配置
mybatis:
    mapperLocations: classpath:mapper/**/*.xml #扫描mapper.xml 所在位置 相对classpath路径位置
    configLocation: classpath:mybatis.xml      #mybatis.xml 配置文件所在位置 相对classpath路径位置



##redis-cache
redis:
    pool:
         maxActive: 300
         maxIdle: 100
         maxWait: 1000
    host: localhost
    port: 6379
    password:
    timeout: 2000

    sysName: liu #redis 库名
    enable: true
    database: 0
##logf4j 配置
logging:
  level:
    com.csccloud.testdemo: debug #包下面所有类的日志级别

##Eureka 客户端配置
eureka:
    instance:
        #ip-address: 10.10.111.245
        prefer-ip-address: true
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        home-page-url-path: /
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/ #服务注册中心地址

##ribbon组件配置
ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000 #负载连接超时阀值 超时会报异常

##feign组件配置
feign:
  hystrix:
    enabled: true ##开启feign组件对hystrix熔断机制的支持

##hystrix组件配置 hystrix 配置策略较为复杂,决定了负载性能以及微服务访问安全 后续补充
hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000 #允许最大响 应超时时间5s
          #隔离策略默认使用THREAD(即Hystrix熔断机制在新开的线程中执行) SEMApHORE(信号量 不开启新线程使用父线程)
          #官方推荐使用默认 线程隔离策略,性能较后者低但更安全.
          strategy: THREAD

management:
  endpoints:
    web:
      exposure:
            include: '*'




